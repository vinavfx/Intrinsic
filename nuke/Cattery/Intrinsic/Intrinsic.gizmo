#! /opt/Nuke14.0v7/libnuke-14.0.7.so -nx
version 14.0 v7
Gizmo {
 onCreate "def exe(func, *args):\n    allowed_knobs = \['Boolean_Knob', 'PyScript_Knob']\n    exclude_knobs = \['selected']\n\n    knob = nuke.thisKnob()\n    allowed_knob = knob.Class() in allowed_knobs and not knob.name() in exclude_knobs\n\n    try:\n        return eval(func)(*args)\n    except Exception as e:\n\n        if not allowed_knob:\n            return\n\n        if not 'vina' in str(e):\n            return\n\n        message = 'ask <b>Francisco Contreras</b> for the script <b>\"\{\}\"</b>, since the script for this method is not embedded in the node. Thank you.'.format(\n            func)\n        nuke.message(message)\n"
 addUserKnob {20 controls l Controls}
 addUserKnob {26 "" l "Local GPU:" T ""}
 addUserKnob {41 useGPUIfAvailable l "Use GPU if available" -STARTLINE T RES_COMBINED.useGPUIfAvailable}
 addUserKnob {26 ""}
 addUserKnob {41 shading_output l "Shading Output" t "Channel through which the shading will come out, so that it can later be combined with the albedo." T Copy3.to0}
 addUserKnob {20 about l About}
 addUserKnob {26 _name l "" +STARTLINE T "<b>Intrinsic</b> v1.1<br><br><b>Francisco Contreras</b> - Senior Compositor<br><a href=\"http://vinavfx.com\"><span style=\"color:#C8C8C8;\">vinavfx.com</span></a>"}
 addUserKnob {26 ""}
}
 BackdropNode {
  inputs 0
  name ALBEDO_BD
  tile_color 0x467d9c01
  label "<font face=\"Bitstream Vera Sans\" size=4>ALBEDO</font>"
  note_font_size 20
  xpos 358
  ypos 599
  bdwidth 234
  bdheight 187
  addUserKnob {20 "Setup Tools" +INVISIBLE}
  addUserKnob {1 data l Data}
  data "\{\"color_code\": \"c2\"\}"
 }
 BackdropNode {
  inputs 0
  name SHADING_BD
  tile_color 0x275b8201
  label "<font face=\"Bitstream Vera Sans\" size=4>SHADING</font>"
  note_font_size 20
  xpos 18
  ypos 931
  bdwidth 221
  bdheight 175
  addUserKnob {20 "Setup Tools" +INVISIBLE}
  addUserKnob {1 data l Data}
  data "\{\"color_code\": \"c1\"\}"
 }
 Input {
  inputs 0
  name Input
  xpos 438
  ypos -319
 }
 AddChannels {
  channels rgba
  name AddChannels1
  xpos 438
  ypos -170
 }
set N1c89be30 [stack 0]
 Dot {
  name Dot6
  xpos 118
  ypos -166
 }
 Expression {
  temp_name0 min
  temp_expr0 0.00000001
  expr0 "clamp(r, min, inf)"
  expr1 "clamp(g, min, inf)"
  expr2 "clamp(b, min, inf)"
  channel3 none
  name black_clamp
  xpos 84
  ypos 686
 }
set N6e321a00 [stack 0]
 Dot {
  name Dot7
  xpos 118
  ypos 863
 }
set N75b6e280 [stack 0]
push $N6e321a00
 Colorspace {
  colorspace_out sRGB
  name lin2sRGB
  xpos 231
  ypos 686
 }
push $N1c89be30
 Reformat {
  type "to box"
  box_width {{"ceil(input0.width / 32) * 32"}}
  box_height {{"ceil(input0.height / 32) * 32"}}
  box_fixed true
  resize none
  center false
  name res_optimal
  selected true
  xpos 438
  ypos -84
 }
 Crop {
  box {0 0 {input.width} {input.height}}
  crop false
  name crop
  xpos 438
  ypos -47
 }
 Dot {
  name Dot1
  xpos 472
  ypos 67
 }
set N1c7fa860 [stack 0]
 Dot {
  name Dot3
  xpos 267
  ypos 67
 }
 Inference {
  useGPUIfAvailable {{parent.RES_COMBINED.useGPUIfAvailable}}
  modelFile "\[lsearch -inline \[plugins -all ORDINAL.cat] *.cat]"
  serialiseKnob {}
  name HIRES_ORDINAL
  tile_color 0x66b253ff
  xpos 233
  ypos 297
 }
push $N1c7fa860
 Dot {
  name Dot5
  xpos 639
  ypos 67
 }
 Reformat {
  type "to box"
  box_width 384
  box_height {{box_width}}
  box_fixed true
  scale {1 1}
  resize distort
  name to_low_res
  xpos 605
  ypos 144
 }
 Inference {
  useGPUIfAvailable {{parent.RES_COMBINED.useGPUIfAvailable}}
  modelFile "\[lsearch -inline \[plugins -all ORDINAL.cat] *.cat]"
  serialiseKnob {}
  name LOWRES_ORDINAL
  tile_color 0x66b253ff
  xpos 605
  ypos 182
 }
 Reformat {
  type "to box"
  format "1504 1152 0 0 1504 1152 1 "
  box_width {{res_optimal.width}}
  box_height {{res_optimal.height}}
  resize distort
  filter notch
  name restore_format
  xpos 605
  ypos 223
 }
push $N1c7fa860
 Copy {
  inputs 2
  from0 rgba.red
  to0 forward.u
  name Copy2
  xpos 438
  ypos 217
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 forward.v
  name Copy1
  xpos 438
  ypos 291
 }
 Inference {
  modelFile "\[lsearch -inline \[plugins -all COMBINE.cat] *.cat]"
  serialiseKnob {}
  name RES_COMBINED
  tile_color 0xd1b03cff
  xpos 438
  ypos 362
 }
 Crop {
  box {0 0 {Input.width} {Input.height}}
  reformat true
  crop false
  name restore_input_res
  xpos 438
  ypos 409
 }
 Expression {
  expr0 "(1.0 / r) - 1.0"
  name inv_shd
  xpos 438
  ypos 456
 }
 Colorspace {
  colorspace_out sRGB
  name lin2sRGB1
  xpos 438
  ypos 502
 }
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.red 0 0 rgba.blue 0 2 rgba.red 0 0 rgba.alpha 0 3"
  name Shuffle2
  xpos 438
  ypos 547
 }
 Merge2 {
  inputs 2
  operation divide
  name Merge5
  xpos 438
  ypos 686
 }
 Colorspace {
  colorspace_in sRGB
  name sRGB2lin
  xpos 438
  ypos 728
 }
set Nd7fd66b0 [stack 0]
 Merge2 {
  inputs 2
  operation divide
  name Merge1
  xpos 84
  ypos 1029
 }
 Saturation {
  saturation 0
  name Saturation1
  xpos 84
  ypos 1055
 }
push $N75b6e280
push $Nd7fd66b0
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4
  xpos 438
  ypos 853
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.alpha
  name Copy3
  xpos 438
  ypos 1049
 }
 Output {
  name Output1
  xpos 438
  ypos 1169
 }
 StickyNote {
  inputs 0
  name StickyNote1
  label "No conversion to sRGB is required as \nthe model requires a linear input !"
  xpos 385
  ypos -259
 }
end_group
